#!/bin/bash
# Standalone mount worker. Final, most robust, and correct version.
set -euo pipefail

CLONE_BASE=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --clone-base)
      CLONE_BASE="$2"; shift; shift ;;
    *) echo "Usage: $0 --clone-base <pool/fs>"; exit 1;;
  esac
done

if [ -z "$CLONE_BASE" ]; then echo "Error: --clone-base is required." >&2; exit 1; fi

log() { echo "[$(date -Iseconds)] [zfs-fd-mount] $1" >&2; }

log "Iterating and setting properties on all child datasets of $CLONE_BASE..."

zfs list -r -H -o name "$CLONE_BASE" | while IFS= read -r ds; do
    log "  Setting props for $ds"
    zfs set canmount=on "$ds"
    zfs set sharenfs=off "$ds"
done

log "Attempting to mount all datasets..."
zfs mount -a

# --- Validation ---
MOUNT_POINT=$(zfs get -H -o value mountpoint "$CLONE_BASE")
if [ -d "$MOUNT_POINT/home" ] && [ -d "$MOUNT_POINT/zsd" ]; then
    log "✅ Validation successful. Mount point contains expected directories."
    echo "$MOUNT_POINT"
    exit 0
else
    log "❌ VALIDATION FAILED: Mount point is empty or does not contain expected data."
    exit 1
fi

# DONE.
