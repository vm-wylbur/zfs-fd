#!/bin/bash
# Standalone snapshot worker. Accepts results-dir.
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CLONE_BASE=""
SNAPSHOT_TAG=""
SOURCE=""
RUN_ID=""
RESULTS_DIR=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --clone-base) CLONE_BASE="$2"; shift; shift ;;
    --snapshot-tag) SNAPSHOT_TAG="$2"; shift; shift ;;
    --source) SOURCE="$2"; shift; shift ;;
    --run-id) RUN_ID="$2"; shift; shift ;;
    --results-dir) RESULTS_DIR="$2"; shift; shift ;;
    *) echo "Usage: $0 ... --results-dir <path>"; exit 1 ;;
  esac
done



log() { echo "[$(date -Iseconds)] [zfs-fd-snapshot] $1" >&2; }

# Create the initial metadata file


log "Creating recursive snapshot: $SOURCE@$SNAPSHOT_TAG"
zfs snapshot -r "$SOURCE@$SNAPSHOT_TAG"
log "Applying safety hold: du_analysis_hold"
zfs hold du_analysis_hold "$SOURCE@$SNAPSHOT_TAG"

log "Cloning snapshot to $CLONE_BASE"
"$SCRIPT_DIR/zfsrclone" --yes "$SOURCE@$SNAPSHOT_TAG" "$CLONE_BASE"

if [ -n "$RUN_ID" ]; then
    log "Adding run-id to metadata."
    jq --arg run_id "$RUN_ID" '.analysis.run_id = $run_id' "$RESULTS_DIR/metadata.json" > "$RESULTS_DIR/metadata.json.tmp" && mv "$RESULTS_DIR/metadata.json.tmp" "$RESULTS_DIR/metadata.json"
fi

log "âœ… Snapshot and clone process complete."

# DONE.
